// Depth first traversal 
// TC: O(V+E) and SC: O(V+E) 
 
#include <bits/stdc++.h> 
using namespace std; 
 
class Graph 
{ 
    int vertices; 
    vector<vector<int>> adjList; 
public: 
    Graph(int V) : vertices(V), adjList(V) {} 
    void addEdge(int u, int v) 
    { 
        adjList[u].push_back(v); 
        adjList[v].push_back(u); 
    } 
    void DFSUtil(int v, vector<bool> &visited) 
    { 
        visited[v] = true; 
        cout << v << " "; 
        for (int neighbor : adjList[v]) 
        { 
            if (!visited[neighbor]) 
            { 
                DFSUtil(neighbor, visited); 
            } 
        } 
    } 
 
    void DFS(int start) 
    { 
        vector<bool> visited(vertices, false); 
        DFSUtil(start, visited); 
    } 
}; 
 
int main() 
{ 
    Graph g(6); 
    g.addEdge(0, 1); 
    g.addEdge(0, 2); 
    g.addEdge(1, 3); 
    g.addEdge(1, 4); 
    g.addEdge(2, 5); 
 
    g.DFS(0); 
 
    return 0; 
} 
